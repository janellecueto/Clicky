{"version":3,"sources":["components/NavBar.js","components/Jumbo.js","components/Game.js","components/Main.js","App.js","index.js"],"names":["NavBar","props","className","message","currentScore","topScore","Jumbo","Game","children","GamePiece","alt","src","imgSrc","data-count","count","onClick","Main","state","current","top","clicks","handleImgOnClick","event","curr","target","getAttribute","includes","setState","concat","this","data","images","map","index","key","sort","Math","random","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"mLAceA,MAZf,SAAgBC,GACR,OACI,yBAAKC,UAAU,wDACX,0BAAMA,UAAU,wBAAhB,UACA,0BAAMA,UAAU,cAAcD,EAAME,SACpC,6BACI,wCAAcF,EAAMG,aAApB,iBAAgDH,EAAMI,aCN3D,SAASC,IACpB,OACI,yBAAKJ,UAAU,yBACX,4CACA,yGCJL,SAASK,EAAT,GAA0B,IAAXC,EAAU,EAAVA,SAClB,OACI,yBAAKN,UAAU,yBAAyBM,GAIzC,SAASC,EAAUR,GACtB,OACQ,yBAAKC,UAAU,aACXQ,IAAI,aACJC,IAAKV,EAAMW,OACXC,aAAYZ,EAAMa,MAClBC,QAASd,EAAMc,U,WCwDhBC,E,2MA/DXC,MAAQ,CACJC,QAAS,EACTC,IAAK,EACLC,OAAQ,GACRjB,QAAS,qC,EAGbkB,iBAAmB,SAACC,GAEhB,IACIC,EADMD,EAAME,OACDC,aAAa,cACxB,EAAKR,MAAMG,OAAOM,SAASH,IAe3B,EAAKI,SAAS,CAACxB,QAAS,gCACxB,EAAKwB,SAAS,CAACT,QAAS,IACxB,EAAKS,SAAS,CAACP,OAAQ,OAhBG,KAAvB,EAAKH,MAAMC,UAEV,EAAKS,SAAS,CAACT,QAAS,IACxB,EAAKS,SAAS,CAACP,OAAQ,KACvB,EAAKO,SAAS,CAACxB,QAAS,wBAG5B,EAAKwB,SAAS,CAACT,QAAS,EAAKD,MAAMC,QAAU,IAC1C,EAAKD,MAAMC,SAAW,EAAKD,MAAME,KAChC,EAAKQ,SAAS,CAACR,IAAK,EAAKF,MAAMC,QAAU,IAE7C,EAAKS,SAAS,CAACP,OAAQ,EAAKH,MAAMG,OAAOQ,OAAOL,KAChD,EAAKI,SAAS,CAACxB,QAAS,wB,wEASvB,IAAD,OACJ,OACI,6BACI,kBAAC,EAAD,CACIC,aAAcyB,KAAKZ,MAAMC,QACzBb,SAAUwB,KAAKZ,MAAME,IACrBhB,QAAS0B,KAAKZ,MAAMd,UAExB,kBAACG,EAAD,MACA,kBAACC,EAAD,KAEQuB,EAAKC,OAAOC,IAAI,SAACpB,EAAQqB,GACrB,OACI,kBAACxB,EAAD,CACIyB,IAAKtB,EACLA,OAAQA,EACRG,QAAS,EAAKM,iBACdP,MAAOmB,MAGhBE,KAAK,kBAAKC,KAAKC,SAAS,W,GAtDhCC,IAAMC,WCCVC,MAJf,WACE,OAAO,kBAAC,EAAD,OCATC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.2d59d6e3.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction NavBar(props){\n        return (\n            <nav className=\"navbar navbar-light bg-light justify-content-between\">\n                <span className=\"navbar-brand mb-0 h1\">Navbar</span>\n                <span className=\"my-message\">{props.message}</span>\n                <div>\n                    <span>Score: {props.currentScore} | Top Score: {props.topScore}</span>\n                </div>\n            </nav>\n        );\n    }\n\nexport default NavBar;\n\n","import React from \"react\";\n\nexport default function Jumbo(){\n    return(\n        <div className=\"jumbotron text-center\">\n            <h1>Clicky Game!</h1>\n            <h3>Click on an image to earn points, but don't click on any more than once!</h3>\n        </div>\n    )\n}","import React from \"react\"\n\nexport function Game({children}){\n    return (\n        <div className=\"container text-center\">{children}</div>\n    )\n}\n\nexport function GamePiece(props){\n    return(\n            <img className=\"game-piece\" \n                alt=\"game piece\"\n                src={props.imgSrc}\n                data-count={props.count}\n                onClick={props.onClick}\n            />\n    )\n}","import React from \"react\"\nimport NavBar from \"./NavBar\"\nimport Jumbo from \"./Jumbo\"\nimport {Game, GamePiece} from \"./Game\"\nimport data from \"../resources/images.json\"\n\nclass Main extends React.Component{\n    state = {\n        current: 0,\n        top: 0,\n        clicks: [],\n        message: \"Click the tiles to start playing!\"\n    }\n\n    handleImgOnClick = (event) => {\n        // console.log(event.target);\n        var img = event.target;\n        var curr = img.getAttribute(\"data-count\");\n        if(!this.state.clicks.includes(curr)){\n            if(this.state.current === 11){\n                //user won!\n                this.setState({current: 0});\n                this.setState({clicks: []});\n                this.setState({message: \"Congrats! You won!\"});\n\n            }\n            this.setState({current: this.state.current + 1});\n            if(this.state.current >= this.state.top){\n                this.setState({top: this.state.current + 1});\n            }\n            this.setState({clicks: this.state.clicks.concat(curr)})\n            this.setState({message: \"Keep on clicking!\"});\n        } else {\n            this.setState({message: \"Boo... you lose. Try again!\"});\n            this.setState({current: 0});\n            this.setState({clicks: []});\n        }\n\n    }\n\n    render(){\n        return(\n            <div>\n                <NavBar \n                    currentScore={this.state.current}\n                    topScore={this.state.top}\n                    message={this.state.message}\n                />\n                <Jumbo/>\n                <Game>\n                    {\n                        data.images.map((imgSrc, index) => {\n                            return(\n                                <GamePiece\n                                    key={imgSrc}\n                                    imgSrc={imgSrc}\n                                    onClick={this.handleImgOnClick}\n                                    count={index}\n                                />\n                            )\n                        }).sort(()=> Math.random()-0.5) //this will randomly sort the pics each time virtual dom rerenders\n                    }\n                </Game>\n\n            </div>\n        );\n\n    }\n}\n\nexport default Main;","import React from \"react\";\nimport Main from \"./components/Main\"\n\nfunction App() {\n  return <Main/>;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}